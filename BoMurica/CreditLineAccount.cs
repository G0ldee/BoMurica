//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BoMurica
{
    using BankOfMerica.BMView;
    using BoMurica.BMModels;
    using System;
    using System.Collections.Generic;
    using System.Data.Entity.Migrations;
    using System.Linq;

    public partial class CreditLineAccount
    {
        public string Account { get; set; }
        public string ClientID { get; set; }
        public decimal Balance { get; set; }

        internal void SetValues(Account account)
        {
            var count = 0;
            using (BomDBEntities1 bomDb = new BomDBEntities1())
            {
                count = bomDb.CreditLineAccounts.Count() + 1;
            }
            this.Account = "CR" + "00" + count;
            this.ClientID = account.ClientId;
            if (account.InitDepositDebt >= 0)
            {
                this.Balance = account.InitDepositDebt;
            }
        }

        internal void AddCreditAccount()
        {
            using (BomDBEntities1 bomDb = new BomDBEntities1())
            {
                bomDb.CreditLineAccounts.Add(this);
                bomDb.SaveChanges();
            }
        }

        internal void UpdateBalance(decimal balance)
        {
            this.Balance = this.Balance + balance;
            using (BomDBEntities1 bomDb = new BomDBEntities1())
            {
                bomDb.CreditLineAccounts.AddOrUpdate(this);
                bomDb.SaveChanges();
            }
        }

        internal String GetID()
        {
            return this.ClientID;
        }
        internal decimal ApplyInterest()
        {
            decimal percent = 1.05m;
            decimal newAmount;
            decimal diff;
            using (BomDBEntities1 bomDb = new BomDBEntities1())
            {
                newAmount = this.Balance * percent;
                diff = newAmount - this.Balance;
                this.Balance = newAmount;
                bomDb.CreditLineAccounts.AddOrUpdate(this);
                bomDb.SaveChanges();
            }
            return diff;
        }

        public virtual ClientInfo ClientInfo { get; set; }
    }
}
